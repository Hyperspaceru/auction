{"version":3,"sources":["redux/actions/itemsActions.js","components/ListItem/index.js","components/Timer/index.js","redux/actions/timerActions.js","components/ControlBar/index.js","redux/actions/modalMenuActions.js","components/AddForm/index.js","components/ModalMenu/index.js","components/List/index.js","components/ModalWinner/index.js","components/BuyoutItem/index.js","components/App.js","serviceWorker.js","redux/reducers/timerReducer.js","redux/state.js","redux/reducers/itemsReducer.js","redux/reducers/modalMenuReducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["nextListId","addItem","item","id","type","payload","deleteItem","itemId","updateItem","checkMathExp","str","match","ListItem","props","useState","text","_text","setText","cost","_cost","setCost","dispatch","useDispatch","handleChange","event","state","target","value","handleTextFocus","handleTextKey","key","keyCode","handleCostFocus","eval","handleCostKey","className","onChange","e","onKeyUp","onBlur","placeholder","pattern","onClick","onDelete","class","formatTime","ms","minutes","Math","floor","seconds","mills","Timer","initialTime","timerLeft","useRef","previousTime","formatedLeftTime","setFormatedLeftTime","timerId","setTimerId","timerStore","useSelector","timerReducer","useEffect","minuteUpdate","current","max","reset","isPause","timeIsOver","clearInterval","setInterval","previousTmp","Date","now","diff","left","ControlBar","AddForm","textRef","onSubmit","preventDefault","focus","form","ref","getCSVString","items","csvContent","forEach","row","getCSVStringForBalls","i","ModalMenu","listSlide","setListSlide","itemsStore","itemsReducer","modalStore","modalMenuReducer","menuIsVisible","stopPropagation","download","href","encodeURI","checked","buyoutEnabled","handleSwitchInput","buyoutCost","List","map","maxReducer","ModalWinner","timer","modal","length","reduce","winner","setWinner","BuyoutItem","App","Boolean","window","location","hostname","initialState","action","sortByCost","itemA","itemB","newState","sort","filter","reducers","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.51d14bd2.chunk.js","sourcesContent":["let nextListId = 4\n\nexport const addItem = (item) => {\n    item.id = nextListId++\n    return  {\n        type: 'ADD_ITEM',\n        payload: item\n    }\n}\n\nexport const deleteItem = (itemId) => ({\n    type: 'DELETE_ITEM',\n    payload: itemId\n})\n\nexport const updateItem = (item) => ({\n    type: 'UPDATE_ITEM',\n    payload: item\n})\n","import React, { useState, useEffect } from 'react';\nimport './ListItem.scss'\nimport { useDispatch } from 'react-redux';\nimport { updateItem } from '../../redux/actions/itemsActions';\n\n\nconst checkMathExp = (str) => {\n    const regex = /^\\d+(\\s*[+\\-*/]\\s*\\d+)+$/g\n    if (str.match(regex)) {\n        return true\n    }\n    return false\n}\nfunction ListItem(props) {\n    const [_text, setText] = useState(props.text)\n    const [_cost, setCost] = useState(props.cost)\n    const dispatch = useDispatch()\n\n    const handleChange = (event, state) => {\n        state(event.target.value)\n    }\n\n    const handleTextFocus = (event) => {\n        let value = event.target.value\n        setText(value)\n        dispatch(updateItem({ id: props.id, text: value, cost: _cost }))\n    }\n\n    const handleTextKey = (event) => {\n        let value = event.target.value\n        if (event.key === 'Enter' || event.keyCode === 13) {\n            setText(value)\n            dispatch(updateItem({ id: props.id, text: value, cost: _cost }))\n        }\n       \n    }\n    \n    const handleCostFocus = (event) => {\n        let value = event.target.value\n        if (checkMathExp(value)) {\n            value = eval(value)\n        }\n        setCost(value)\n        dispatch(updateItem({ id: props.id, text: _text, cost: value }))\n        \n    }\n\n    const handleCostKey = (event) => {\n        let value = event.target.value\n        if (event.key === 'Enter' || event.keyCode === 13) {\n            if (checkMathExp(value)) {\n                value = eval(value)\n            }\n            setCost(value)\n            dispatch(updateItem({ id: props.id, text: _text, cost: value }))\n        }        \n    }\n    return (\n        <div className=\"list__item\">\n            <div className=\"list__input_group\">\n                <input type=\"text\" className=\"list__input\" value={_text} onChange={e => handleChange(e, setText)} onKeyUp={e => handleTextKey(e)} onBlur={e => handleTextFocus(e)} placeholder=\"Название\" />\n                <input type=\"text\" className=\"list__input input_cost\" value={_cost} onChange={e => handleChange(e, setCost)} onKeyUp={e => handleCostKey(e)} onBlur={e => handleCostFocus(e)} placeholder=\"Сумма\" pattern=\"[0-9\\.\\+\\-\\*\\/]*\" />\n            </div>\n            <button className=\"list__delete\" onClick={props.onDelete} ><i class=\"fas fa-times\"></i></button>\n        </div>\n    )\n}\n\nexport default ListItem;\n\n","import React, { useEffect, useState, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { stopTimer, resetTimerDone, minuteUpdateDone } from '../../redux/actions/timerActions';\nimport './Timer.scss';\n\nconst minute = 60 * 1000\n\nconst formatTime = (ms) => {\n  let timeLeft = {\n    minutes: Math.floor((ms / 1000 / 60) % 60),\n    seconds: Math.floor((ms / 1000) % 60),\n    mills: ms % 1000\n  }\n  return timeLeft\n}\n\nconst Timer = ({ initialTime }) => {\n  const timerLeft = useRef(initialTime)\n  const previousTime = useRef(null)\n  const [formatedLeftTime, setFormatedLeftTime] = useState(formatTime(0))\n  const [timerId, setTimerId] = useState(null)\n  const dispatch = useDispatch()\n  const timerStore = useSelector(state => state.timerReducer)\n\n  useEffect(() => {   \n    //plus/minus minute           \n    if (timerStore.minuteUpdate !== 0) {\n      timerLeft.current = Math.max(timerLeft.current + (minute * timerStore.minuteUpdate) , 0)\n      dispatch(minuteUpdateDone())\n      setFormatedLeftTime(formatTime(timerLeft.current))\n    }\n    //reset timer\n    if (timerStore.reset) {\n      timerLeft.current = initialTime\n      previousTime.current = null\n      dispatch(resetTimerDone())\n      setFormatedLeftTime(formatTime(timerLeft.current))\n    }\n    if (timerStore.isPause || timerStore.timeIsOver) {\n      clearInterval(timerId)\n      previousTime.current = null\n      if(timerStore.timeIsOver){\n        timerLeft.current = 0\n      }\n      setFormatedLeftTime(formatTime(timerLeft.current))\n    } else {\n      const id = setInterval(() => {     \n        let previousTmp = previousTime.current ? previousTime.current : Date.now()\n        let diff = Date.now() - previousTmp\n        let left = timerLeft.current - diff\n        //out of time\n        if (left < 10) {\n          dispatch(stopTimer())\n          timerLeft.current = 0\n          setFormatedLeftTime(0)\n        } else {\n          previousTime.current = Date.now()\n          timerLeft.current = left\n          setFormatedLeftTime(formatTime(left))\n        }\n      }, 33);\n\n      setTimerId(id)\n    }\n    // Clear timeout if the component is unmounted\n    return () => clearInterval(timerId);\n  }, [timerStore, dispatch]);\n\n  return (<div className=\"timer_container\">\n    <p className=\"timer\">{formatedLeftTime.minutes ? formatedLeftTime.minutes : 0} : {formatedLeftTime.seconds ? formatedLeftTime.seconds : 0} : {formatedLeftTime.mills ? formatedLeftTime.mills : 0}</p>\n    \n    </div>\n  )\n}\n\nexport default Timer","\nexport const startTimer = () => ({\n    type:'START_TIMER'\n\n})\nexport const pauseTimer = () => ({\n    type:'PAUSE_TIMER'\n\n})\nexport const stopTimer = () => ({\n    type:'STOP_TIMER'\n\n})\nexport const resetTimer = () => ({\n    type:'RESET_TIMER'\n\n})\nexport const resetTimerDone = () => ({\n    type:'RESET_TIMER_DONE'\n\n})\nexport const plusMinute = () => ({\n    type:'PLUS_MINUTE'\n\n})\nexport const minusMinute = () => ({\n    type:'MINUS_MINUTE'\n\n})\nexport const minuteUpdateDone = () => ({\n    type:'MINUTE_UPDATE_DONE'\n\n})\nexport const stopTimerDone = () => ({\n    type:'STOP_TIMER_DONE'\n\n})\n\n\n","import React from 'react';\nimport { useSelector,useDispatch } from 'react-redux';\nimport { pauseTimer, plusMinute, minusMinute, resetTimer, startTimer } from '../../redux/actions/timerActions';\nimport './ControlBar.scss'\nimport { showMenu } from '../../redux/actions/modalMenuActions';\n\n\n\nfunction ControlBar() {\n    const dispatch = useDispatch()\n    const timerStore = useSelector(state => state.timerReducer)\n\n    return (\n        <div className=\"control-bar\">\n            <button className=\"control-bar_button\" onClick={()=>dispatch(resetTimer())}><i class=\"fas fa-stop\"></i></button>\n            <button className=\"control-bar_button\" onClick={()=>dispatch(plusMinute())}><i class=\"fas fa-plus\"></i></button>\n            <button className={`control-bar_button ${timerStore.isPause?'':'button--disable'}`} onClick={()=>dispatch(startTimer())}><i class=\"fas fa-play\"></i></button>\n            <button className={`control-bar_button ${timerStore.isPause?'button--disable':''}`} onClick={()=>dispatch(pauseTimer())}><i class=\"fas fa-pause\"></i></button>\n            <button className=\"control-bar_button\" onClick={()=>dispatch(minusMinute())}><i class=\"fas fa-minus\"></i></button>\n            <button className=\"control-bar_button\" onClick={()=>dispatch(showMenu())}><i class=\"fas fa-ellipsis-h\"></i></button>\n        </div>\n    );\n}\n\nexport default ControlBar;","export const showMenu = () => ({\n    type:'SHOW_MENU'\n})\n\nexport const hideMenu = () => ({\n    type:'HIDE_MENU'\n})\n\nexport const enableBuyout = () =>({\n    type: 'ENABLE_BUYOUT'\n})\n\nexport const disableBuyout = () =>({\n    type: 'DISABLE_BUYOUT'\n})\n\nexport const setBuyoutCost = (cost)=>({\n    type: 'SET_BUYOUTCOST',\n    payload:{cost:cost}\n})","import React, { useState, useEffect } from 'react';\nimport './AddForm.scss'\nimport { useDispatch } from 'react-redux';\nimport { addItem } from '../../redux/actions/itemsActions';\nimport { useRef } from 'react';\n\nconst handleChange = (event, state) =>{\n    state(event.target.value)\n}\n\nfunction AddForm() {\n    const dispatch = useDispatch()\n    const [text,setText] = useState()\n    const [cost,setCost] = useState()\n    const textRef = useRef(null)\n\n    const handleSubmit = (event) =>{    \n        dispatch(addItem({\n            text:text,\n            cost:cost\n        }))\n        event.preventDefault()\n        setText('')\n        setCost('')\n        textRef.current.focus()\n    }\n\n\n    return (\n        <form onSubmit={e=>handleSubmit(e)} className=\"add-form\" id=\"add-form\">\n            <button type=\"submit\" className=\"add-form_submit\" form=\"add-form\">Добавить</button>\n            <div className=\"add-form_input-group\">\n                <input ref={textRef} type=\"text\" className=\"add-form_input\" value={text} onChange={e=>handleChange(e,setText)} />\n                <input type=\"text\" className=\"add-form_input\" value={cost} onChange={e=>handleChange(e,setCost)} />\n            </div>\n        </form>\n    );\n}\n\nexport default AddForm;","import React , {useState} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './ModalMenu.scss'\nimport { hideMenu, enableBuyout, disableBuyout, setBuyoutCost } from '../../redux/actions/modalMenuActions';\n\nconst getCSVString = (items)=>{\n    let csvContent = \"data:text/csv;charset=utf-8,\";\n    items.forEach(function(item) {\n        let row = `${item.text}, ${item.cost}`\n        csvContent += row + \"\\r\\n\";\n    });\n    return csvContent\n}\n\nconst getCSVStringForBalls = (items)=>{\n    let csvContent = \"data:text/csv;charset=utf-8,\";\n    items.forEach(function(item) {\n        \n        for (let i=0; i<item.cost; i++){\n            let row = `${item.text}`\n            csvContent += row + \"\\r\\n\";\n        }\n        \n    });\n    return csvContent\n}\n\nconst handleSwitchInput=(event,dispatch)=>{\n    if (event.target.checked){\n        dispatch(enableBuyout())\n    }else{\n        dispatch(disableBuyout())\n    }\n}\n\nfunction ModalMenu() {\n    const [listSlide,setListSlide]=useState(false)\n    const itemsStore = useSelector(state=>state.itemsReducer)\n    const modalStore = useSelector(state => state.modalMenuReducer)\n    const dispatch = useDispatch()\n    if (!modalStore.menuIsVisible&&listSlide){\n        setListSlide(false)\n    }\n\n    return (\n        <div className={`modal ${modalStore.menuIsVisible?'':'modal--disable'}`} onClick={()=>dispatch(hideMenu())}>\n            <div className=\"modal_menu\" onClick={(e)=>{e.stopPropagation()}}>\n                <div className=\"modal_menu__item\">\n                    <button className='modal_menu__button' onClick={()=>{setListSlide(!listSlide)}}>Скачать список</button>\n                    <div className={`modal_menu__subitem ${listSlide?'modal_menu__subitem--slide':''}`}>\n                        <button className=\"modal_menu__button\"><a className=\"button__link\" download='list.csv' href={encodeURI(getCSVString(itemsStore))}>Обычный</a> </button>\n                        <button className=\"modal_menu__button\"><a className=\"button__link\" download='list_balls.csv' href={encodeURI(getCSVStringForBalls(itemsStore))}>Для шаров</a></button>\n                    </div>\n\n                </div>\n                <div className=\"modal_menu__item\">\n                    <label className=\"switch__title\">Выкуп</label>\n                    <label class=\"switch\">\n                        <input type=\"checkbox\" checked={modalStore.buyoutEnabled} onChange={(e)=>{handleSwitchInput(e,dispatch)}} class=\"switch__checkbox\" />\n                        <div class=\"switch__slider\"></div>\n                    </label>\n                    <div className={`modal_menu__subitem ${modalStore.buyoutEnabled?'modal_menu__subitem--slide':''}`}>\n                        <input className=\"modal_menu__input\" type=\"text\" value={modalStore.buyoutCost} onChange={(e)=>{dispatch(setBuyoutCost(e.target.value))}}/>\n                    </div>\n                </div>\n                {/* <div className=\"modal_menu__item\">Размер столбца\n                    <div class=\"slidecontainer\">\n                        <input type=\"range\" min=\"1\" max=\"100\" />\n                    </div>\n                </div> */}\n            </div>\n        </div>\n    );\n}\n\nexport default ModalMenu;","import React, { useState, useEffect } from 'react';\nimport './List.scss'\nimport ListItem from '../ListItem'\nimport { useSelector,useDispatch } from 'react-redux';\nimport { deleteItem } from '../../redux/actions/itemsActions';\n\nfunction List() {\n    const items = useSelector(state=>state.itemsReducer)\n    const dispatch = useDispatch()\n    return (\n        <section className=\"list\">\n            {items.map(item=>{\n                return <ListItem key={item.id} id={item.id} text={item.text} cost={item.cost} onDelete={()=>{dispatch(deleteItem(item.id))}}></ListItem>\n            })}\n            \n        </section>\n    );\n}\n\nexport default List;","import React , {useState,useEffect} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { stopTimerDone, stopTimer } from '../../redux/actions/timerActions';\nimport './ModalWinner.scss'\n\nconst maxReducer = (max, current) => max.cost >= current.cost ? max : current\n\nfunction ModalWinner() {\n    const items = useSelector(state => state.itemsReducer)\n    const timer = useSelector(state => state.timerReducer)\n    const modal = useSelector(state => state.modalMenuReducer)\n    const [winner, setWinner] = useState(items.length>0?items.reduce(maxReducer):{})\n    const dispatch = useDispatch()\n\n    useEffect(()=>{ \n        if (items.length>0){\n            setWinner(items.reduce(maxReducer))\n        }\n    },[items])\n\n    useEffect(() => {        \n        // debugger\n        if (modal.buyoutEnabled && winner.cost>=modal.buyoutCost && modal.buyoutCost>0 && (!timer.isPause||timer.timeIsOver)){\n            dispatch(stopTimer())\n        }\n    },[winner,timer.isPause])\n\n    if (items.length > 0) {\n        return (\n            <div className={`modal-winner ${timer.timeIsOver ? '' : 'modal-winner--disable'}`} onClick={() => dispatch(stopTimerDone())}>\n            {/* <div className={`modal-winner ${(timer.timeIsOver) || (modal.buyoutEnabled && winner.cost >= modal.buyoutCost && modal.buyoutCost>0 && (!timer.isPause||timer.timeIsOver)) ? '' : 'modal-winner--disable'}`} onClick={() => dispatch(stopTimerDone())}> */}\n                <div className=\"modal-winner_text\">\n                    <h1 className=\"modal-winner_h1\">Победитель</h1>\n                    <h3 className=\"modal-winner_name\">{winner.text}</h3>\n                    <p className=\"modal-winner_price\">{winner.cost} рублей</p>\n                </div>\n            </div>\n        )\n\n    } else {\n        return ''\n    }\n\n}\n\nexport default ModalWinner;","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport './BuyoutItem.scss'\n\nfunction BuyoutItem() {\n    const modalStore = useSelector(state => state.modalMenuReducer)\n    return (\n    <p className={`buyoutItem ${modalStore.buyoutEnabled?'':'buyoutItem--hide'}`}>Выкуп {modalStore.buyoutCost}</p>\n    )\n}\n\nexport default BuyoutItem\n","import React from 'react';\nimport '../css/App.scss';\nimport Timer from './Timer';\nimport ControlBar from './ControlBar';\nimport AddForm from './AddForm';\nimport ModalMenu from './ModalMenu';\nimport List from './List';\nimport ModalWinner from './ModalWinner';\nimport BuyoutItem from './BuyoutItem';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <main>\n        <ModalWinner></ModalWinner>\n        <ModalMenu></ModalMenu>\n        <Timer initialTime={(20000)}></Timer>\n        <BuyoutItem></BuyoutItem>\n        <AddForm></AddForm>\n        <List></List>\n      </main>\n      <ControlBar></ControlBar>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nconst initialState = {\n    isPause: true,\n    minuteUpdate:0,\n    timeIsOver:false,\n    reset:false\n}\n\n\nconst timerReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'START_TIMER':\n            return {\n                ...state,\n                isPause: false,\n                timeIsOver: false\n            }\n        case 'PAUSE_TIMER':\n            return {\n                ...state,\n                isPause: true\n            }\n        case 'STOP_TIMER':\n            return { \n                ...state,\n                timeIsOver:true,\n                isPause:true                    \n            }\n        case 'STOP_TIMER_DONE':\n            return{\n                ...state,\n                timeIsOver:false,\n            }\n        case 'RESET_TIMER':\n            return {\n                ...initialState,\n                reset:true\n            }\n        case 'RESET_TIMER_DONE':\n            return {\n                ...state,\n                reset:false\n            }\n        case 'PLUS_MINUTE':\n            return {\n                ...state,\n                minuteUpdate:1\n            }\n        case 'MINUS_MINUTE':\n            return {\n                ...state,\n                minuteUpdate:-1\n            }\n        case 'MINUTE_UPDATE_DONE':\n            return{\n                ...state,\n                minuteUpdate:0\n            }\n        default:\n            return state\n    }\n}\n\nexport default timerReducer","export let items = [\n    {\n        id:1,\n        text:\"Камень (2009)\",\n        cost:100\n    },{\n        id:2,\n        text:\"Сорви голова часть первая эпизод 5 (2009)\",\n        cost:500\n    },{\n        id:3,\n        text:\"Южный парк (2001)\",\n        cost:300\n    },\n]\n// export let items = [\n\n// ]","// import {addItem,deleteItem,updateItem} from '../actions'\nimport { items } from '../state'\n\nconst sortByCost = (itemA, itemB) => {\n    return itemB.cost - itemA.cost\n}\n\nconst itemsReducer = (state = items, action) => {\n    let newState \n    let _state\n    switch (action.type) {\n        case 'ADD_ITEM':\n            newState = [...state]\n            _state = [\n                ...newState,\n                {\n                    id: action.payload.id,\n                    text: action.payload.text,\n                    cost: action.payload.cost\n                }\n            ]\n            newState = _state.sort((itemA, itemB) => sortByCost(itemA, itemB))\n            return newState \n        case 'DELETE_ITEM':\n            _state = [...state]\n            newState = _state.filter(item => item.id !== action.payload)\n            return newState\n        case 'UPDATE_ITEM':\n            _state=[...state]\n            newState = _state.filter(item => item.id !== action.payload.id)\n            _state = [...newState,{\n                id:action.payload.id,\n                text: action.payload.text,\n                cost: action.payload.cost\n            }]\n            newState = _state.sort((itemA, itemB) => sortByCost(itemA, itemB))\n            return newState\n        default:\n            return state\n    }\n}\n\nexport default itemsReducer","const initialState = {\n    menuIsVisible: false,\n    buyoutEnabled: true,\n    buyoutCost: 600\n    \n}\n\nconst modalMenuReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'SHOW_MENU':\n            return {\n                ...state,\n                menuIsVisible: true\n            }\n        case 'HIDE_MENU':\n            return {\n                ...state,\n                menuIsVisible: false\n            }\n        case 'ENABLE_BUYOUT':\n            return {\n                ...state,\n                buyoutEnabled:true\n            }\n        case 'DISABLE_BUYOUT':\n            return {\n                ...state,\n                buyoutEnabled:false\n            }\n        case 'SET_BUYOUTCOST':\n            return {\n                ...state,\n                buyoutCost:action.payload.cost\n            }\n        default:\n            return state\n    }\n}\n\nexport default modalMenuReducer","import {combineReducers} from 'redux'\nimport timerReducer from './timerReducer'\nimport itemsReducer from './itemsReducer'\nimport modalMenuReducer from './modalMenuReducer'\n\nconst reducers = combineReducers({\n    timerReducer,\n    itemsReducer,\n    modalMenuReducer   \n})\n\nexport default reducers\n\n","import { createStore } from 'redux'\nimport reducers from './reducers'\n\nexport const store = createStore(reducers,\n      window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport BrowserRouter from 'react-router-dom/BrowserRouter'\nimport { Provider } from 'react-redux'\nimport { store } from './redux/store'\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}